generator client {
  provider = "prisma-client-js"
  output   = "../prisma/generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  nickname     String    
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")
  password     String
  imageUrl     String?    @map("image_url")
  reviewCount  Int        @default(0) @map("review_count")
  likeCount    Int        @default(0) @map("like_count")
  gradeId      Int?       @map("grade_id")
  
  grade        Grade?     @relation(fields: [gradeId], references: [id])
  codeSnippets CodeSnippet[]
  reviews      Review[]
  reviewLikes  ReviewLike[]

  @@map("users")
}

model Grade {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
  
  @@map("grades")
}

model CodeSnippet {
  id         Int       @id @default(autoincrement())
  title      String
  content    String
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  userId     String    @map("user_id")

  user       User      @relation(fields: [userId], references: [id])
  reviews    Review[]
  categories CodeSnippetCategory[]

  @@map("code_snippets")
}

model Category {
  id    Int                    @id @default(autoincrement())
  name  String
  codeSnippetCategories CodeSnippetCategory[]

  @@map("categories")
}

model CodeSnippetCategory {
  codeId     Int      @map("code_id")
  categoryId Int      @map("category_id")

  codeSnippet       CodeSnippet @relation(fields: [codeId], references: [id])
  category   Category    @relation(fields: [categoryId], references: [id])

  @@id([codeId, categoryId])
  @@map("code_snippet_categories")
}

model Review {
  id         Int       @id @default(autoincrement())
  content    String
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  parentId   Int?      @map("parent_id")
  userId     String    @map("user_id")
  codeId     Int       @map("code_id")

  user       User      @relation(fields: [userId], references: [id])
  codeSnippet       CodeSnippet @relation(fields: [codeId], references: [id])
  likes      ReviewLike[]

  @@map("reviews")
}

model ReviewLike {
  userId   String  @map("user_id")
  reviewId Int     @map("review_id")

  user     User    @relation(fields: [userId], references: [id])
  review   Review  @relation(fields: [reviewId], references: [id])

  @@id([userId, reviewId])
  @@map("review_likes")
}
